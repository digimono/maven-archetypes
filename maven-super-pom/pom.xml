<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.digimono</groupId>
  <artifactId>maven-super-pom</artifactId>
  <packaging>pom</packaging>
  <version>0.0.4-SNAPSHOT</version>

  <name>${project.artifactId}</name>
  <description>Top-level parent super POM for all projects</description>
  <url>https://github.com/digimono/maven-archetypes</url>

  <inceptionYear>2019</inceptionYear>

  <properties>
    <main.basedir>${project.basedir}/..</main.basedir>

    <java.version>1.8</java.version>

    <required.maven.version>3.5.4</required.maven.version>
    <required.java.version>${java.version}</required.java.version>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <maven.compiler.parameters>false</maven.compiler.parameters>
    <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>

    <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourcesEncoding>UTF-8</project.build.resourcesEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Maven Plugins -->
    <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>

    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-source-plugin.version>3.2.0</maven-source-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
    <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
    <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>

    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

    <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
    <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
    <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>

    <maven-pmd-plugin.version>3.12.0</maven-pmd-plugin.version>
    <spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>

    <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <git-commit-id-plugin.version>4.0.0</git-commit-id-plugin.version>
    <flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>

    <!-- Maven Plugin Dependency Versions -->
    <checkstyle.version>8.26</checkstyle.version>

    <!-- https://spotbugs.readthedocs.io/en/stable/index.html -->
    <spotbugs.version>3.1.12</spotbugs.version>
    <pmd.version>6.19.0</pmd.version>
    <alibaba.p3c.version>2.0.0</alibaba.p3c.version>

    <assembly.dir>${project.basedir}</assembly.dir>
    <maven.deploy.skip>true</maven.deploy.skip>
    <assembly.skipAssembly>true</assembly.skipAssembly>
    <spring-boot.repackage.skip>true</spring-boot.repackage.skip>

    <!-- Maven Site Report-->
    <site.output.dir>${project.build.directory}/site</site.output.dir>
    <!-- SpotBugs -->
    <spotbugs.config.dir>${main.basedir}/src/codequality</spotbugs.config.dir>
    <!-- Checkstyle -->
    <checkstyle.config.dir>${main.basedir}/src/codequality</checkstyle.config.dir>
    <checkstyle.config.location>${checkstyle.config.dir}/checkstyle.xml</checkstyle.config.location>
    <checkstyle.suppressions.location>
      ${checkstyle.config.dir}/checkstyle-suppressions.xml
    </checkstyle.suppressions.location>

    <mybatis.generator.config.location>
      ${project.basedir}/src/main/resources/META-INF/mybatis/mybatis-generator.xml
    </mybatis.generator.config.location>

    <main-class/>
    <exclude-dependencies-group-ids/>

    <!-- Dependencies version -->
    <spring.version>5.2.1.RELEASE</spring.version>
    <spring-boot.version>2.2.1.RELEASE</spring-boot.version>
    <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
    <spring-retry.version>1.2.4.RELEASE</spring-retry.version>
    <jackson.version>2.10.0</jackson.version>
    <jackson-databind.version>2.10.0</jackson-databind.version>
    <hikaricp.version>3.4.1</hikaricp.version>

    <junit.version>4.12</junit.version>
    <junit5.version>5.5.2</junit5.version>
    <junit-platform.version>1.5.2</junit-platform.version>
    <apiguardian.version>1.1.0</apiguardian.version>
    <opentest4j.version>1.2.0</opentest4j.version>

    <slf4j-api.version>1.7.29</slf4j-api.version>
    <log4j2.version>2.11.2</log4j2.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-lang3.version>3.9</commons-lang3.version>
    <commons-codec.version>1.13</commons-codec.version>
    <commons-collections4.version>4.4</commons-collections4.version>
    <commons-pool2.version>2.7.0</commons-pool2.version>

    <asm.version>7.2</asm.version>
    <cglib.version>3.3.0</cglib.version>
    <javassist.version>3.26.0-GA</javassist.version>

    <druid.version>1.1.21</druid.version>
    <druid-spring-boot-starter.version>1.1.21</druid-spring-boot-starter.version>
    <fastjson.version>1.2.62</fastjson.version>
    <transmittable-thread-local.version>2.11.0</transmittable-thread-local.version>
    <log4j2-ttl-thread-context-map.version>1.3.0</log4j2-ttl-thread-context-map.version>
    <mysql-connector-java.version>5.1.48</mysql-connector-java.version>
    <mybatis.version>3.5.3</mybatis.version>
    <mybatis-generator.version>1.4.0</mybatis-generator.version>
    <mybatis-spring-boot-starter.version>2.1.1</mybatis-spring-boot-starter.version>
    <pagehelper-spring-boot-starter.version>1.2.12</pagehelper-spring-boot-starter.version>
    <guava.version>28.1-jre</guava.version>
    <caffeine.version>2.8.0</caffeine.version>
    <jjwt.version>0.10.7</jjwt.version>
    <typetools.version>0.6.1</typetools.version>
    <okhttp.version>4.2.2</okhttp.version>
    <joda-time.version>2.10.5</joda-time.version>
    <apache-httpclient.version>4.5.10</apache-httpclient.version>
    <jodd.version>5.0.13</jodd.version>
    <servlet-api.version>4.0.1</servlet-api.version>
    <vavr.version>0.10.2</vavr.version>
    <bouncycastle.version>1.67</bouncycastle.version>
    <hazelcast.version>3.12.4</hazelcast.version>
    <lombok.version>1.18.10</lombok.version>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <!--<release>${maven.compiler.release}</release>-->
            <encoding>${project.build.sourceEncoding}</encoding>
            <parameters>${maven.compiler.parameters}</parameters>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <configuration>
            <encoding>${project.build.resourcesEncoding}</encoding>
            <!-- jpg, jpeg, gif, bmp and png. -->
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>eot</nonFilteredFileExtension>
              <nonFilteredFileExtension>svg</nonFilteredFileExtension>
              <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
              <nonFilteredFileExtension>woff</nonFilteredFileExtension>
              <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Build-Time>${maven.build.timestamp}</Build-Time>
                <!--suppress MavenModelInspection -->
                <SCM-Revision>${git.commit.id}</SCM-Revision>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <charset>UTF-8</charset>
            <encoding>UTF-8</encoding>
            <additionalOptions>
              <additionalOption>-Xdoclint:none</additionalOption>
            </additionalOptions>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <verbose>false</verbose>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>
              ${project.build.outputDirectory}/META-INF/git.properties
            </generateGitPropertiesFilename>
            <excludeProperties>
              <excludeProperty>git.remote.origin.url</excludeProperty>
            </excludeProperties>
            <includeOnlyProperties>
              <includeOnlyProperty>git.branch</includeOnlyProperty>
              <includeOnlyProperty>git.build.time</includeOnlyProperty>
              <includeOnlyProperty>git.build.user.name</includeOnlyProperty>
              <includeOnlyProperty>git.build.user.email</includeOnlyProperty>
              <includeOnlyProperty>git.build.version</includeOnlyProperty>
              <includeOnlyProperty>git.commit.id</includeOnlyProperty>
              <includeOnlyProperty>git.commit.id.abbrev</includeOnlyProperty>
              <includeOnlyProperty>git.commit.time</includeOnlyProperty>
              <includeOnlyProperty>git.commit.user.email</includeOnlyProperty>
              <includeOnlyProperty>git.commit.user.name</includeOnlyProperty>
            </includeOnlyProperties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>src/generated/java</source>
                </sources>
              </configuration>
            </execution>
            <execution>
              <id>add-resource</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>add-resource</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>src/generated/resources</directory>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-descriptor</id>
              <goals>
                <goal>attach-descriptor</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${maven-jxr-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
            <consoleOutput>true</consoleOutput>
            <failOnViolation>false</failOnViolation>
            <failsOnError>false</failsOnError>
            <linkXRef>false</linkXRef>
            <!--<includeTestSourceDirectory>true</includeTestSourceDirectory>-->
            <!--<propertesLocation>${checkstyle.config.dir}/checkstyle.properties</propertesLocation>-->
            <propertyExpansion>checkstyleConfigDir=${checkstyle.config.dir}</propertyExpansion>
            <configLocation>${checkstyle.config.location}</configLocation>
            <suppressionsLocation>${checkstyle.suppressions.location}</suppressionsLocation>
            <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <dependencies>
            <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>${spotbugs.version}</version>
            </dependency>
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs-annotations</artifactId>
              <version>${spotbugs.version}</version>
              <optional>true</optional>
            </dependency>
            <dependency>
              <groupId>net.jcip</groupId>
              <artifactId>jcip-annotations</artifactId>
              <version>1.0</version>
              <optional>true</optional>
            </dependency>
          </dependencies>
          <configuration>
            <effort>Max</effort>
            <threshold>Medium</threshold>
            <failOnError>false</failOnError>
            <xmlOutput>true</xmlOutput>
            <!--<xmlOutputDirectory>target/site/spotbugs</xmlOutputDirectory>-->
            <spotbugsXmlOutput>true</spotbugsXmlOutput>
            <!--<spotbugsXmlOutputDirectory>target/site/spotbugs</spotbugsXmlOutputDirectory>-->
            <excludeFilterFile>${spotbugs.config.dir}/spotbugs-exclude.xml</excludeFilterFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
          <configuration>
            <verbose>false</verbose>
            <linkXRef>true</linkXRef>
            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
            <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
            <minimumTokens>100</minimumTokens>
            <targetJdk>${java.version}</targetJdk>
            <printFailingErrors>true</printFailingErrors>
            <failOnViolation>false</failOnViolation>
            <failurePriority>2</failurePriority>
            <rulesets>
              <ruleset>rulesets/java/ali-comment.xml</ruleset>
              <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
              <ruleset>rulesets/java/ali-constant.xml</ruleset>
              <ruleset>rulesets/java/ali-exception.xml</ruleset>
              <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
              <ruleset>rulesets/java/ali-naming.xml</ruleset>
              <ruleset>rulesets/java/ali-oop.xml</ruleset>
              <ruleset>rulesets/java/ali-orm.xml</ruleset>
              <ruleset>rulesets/java/ali-other.xml</ruleset>
              <ruleset>rulesets/java/ali-set.xml</ruleset>
            </rulesets>
            <excludes>
              <exclude>**/generated/*.java</exclude>
            </excludes>
            <excludeRoots>
              <excludeRoot>target/generated-sources/stubs</excludeRoot>
            </excludeRoots>
          </configuration>
          <executions>
            <execution>
              <id>pmd-check-verify</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
            <execution>
              <id>pmd-pmd-site</id>
              <phase>site</phase>
              <goals>
                <goal>pmd</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>com.alibaba.p3c</groupId>
              <artifactId>p3c-pmd</artifactId>
              <version>${alibaba.p3c.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-site</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>default-cli</id>
              <goals>
                <goal>display-info</goal>
                <goal>enforce</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <!-- Minimum required Maven version is ${required.maven.version} -->
                    <version>${required.maven.version}</version>
                    <message>
                      <![CDATA[You are running an older version of Maven. This application requires at least Maven ${required.maven.version}]]>
                    </message>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${required.java.version}</version>
                    <message>
                      <![CDATA[You are running an older version of Java. This application requires at least JDK ${required.java.version}]]>
                    </message>
                  </requireJavaVersion>
                  <requireProperty>
                    <property>project.version</property>
                    <message>Project version must be specified.</message>
                    <regex>.*(\d|-SNAPSHOT)$</regex>
                    <regexMessage>Project version must end in a number or -SNAPSHOT.</regexMessage>
                  </requireProperty>
                </rules>
              </configuration>
            </execution>
            <!--<execution>-->
            <!--<id>enforce-install</id>-->
            <!--<goals>-->
            <!--<goal>enforce</goal>-->
            <!--</goals>-->
            <!--<phase>install</phase>-->
            <!--<configuration>-->
            <!--<rules>-->
            <!--<requireProperty>-->
            <!--<property>project.version</property>-->
            <!--<message>Project version must be specified.</message>-->
            <!--<regex>.*(\d)$</regex>-->
            <!--<regexMessage>Project version must end in a number.</regexMessage>-->
            <!--</requireProperty>-->
            <!--</rules>-->
            <!--</configuration>-->
            <!--</execution>-->
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
          <configuration>
            <appendAssemblyId>true</appendAssemblyId>
            <tarLongFileMode>gnu</tarLongFileMode>
            <skipAssembly>${assembly.skipAssembly}</skipAssembly>
            <descriptors>
              <descriptor>${assembly.dir}/src/assembly/assembly.xml</descriptor>
            </descriptors>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id> <!-- this is used for inheritance merges -->
              <phase>package</phase> <!-- bind to the packaging phase -->
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
    </plugins>
    <finalName>${project.artifactId}-${project.version}</finalName>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j2.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Junit dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apiguardian</groupId>
        <artifactId>apiguardian-api</artifactId>
        <version>${apiguardian.version}</version>
        <scope>test</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.opentest4j</groupId>
        <artifactId>opentest4j</artifactId>
        <version>${opentest4j.version}</version>
        <scope>test</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-surefire-provider</artifactId>
        <version>${junit-platform.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- To run tests on IDE such as Eclipse, Intellij -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-runner</artifactId>
        <version>${junit-platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-launcher</artifactId>
        <version>${junit-platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Third-party dependencies -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>transmittable-thread-local</artifactId>
        <version>${transmittable-thread-local.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>log4j2-ttl-thread-context-map</artifactId>
        <version>${log4j2-ttl-thread-context-map.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons-collections4.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-pool2</artifactId>
        <version>${commons-pool2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>${cglib.version}</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>${cglib.version}</version>
      </dependency>
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${javassist.version}</version>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-connector-java.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>${mybatis-spring-boot-starter.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper-spring-boot-starter</artifactId>
        <version>${pagehelper-spring-boot-starter.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid-spring-boot-starter.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>guava</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-api</artifactId>
        <version>${jjwt.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-impl</artifactId>
        <version>${jjwt.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-jackson</artifactId>
        <version>${jjwt.version}</version>
      </dependency>
      <!-- Uncomment this next dependency if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms: -->
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>net.jodah</groupId>
        <artifactId>typetools</artifactId>
        <version>${typetools.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${apache-httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>fluent-hc</artifactId>
        <version>${apache-httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vavr</groupId>
        <artifactId>vavr</artifactId>
        <version>${vavr.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast</artifactId>
        <version>${hazelcast.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apiguardian</groupId>
      <artifactId>apiguardian-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opentest4j</groupId>
      <artifactId>opentest4j</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- To run tests on IDE such as Eclipse, Intellij -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <developers>
    <developer>
      <id>digimono</id>
      <name>yangyanju</name>
      <email>yanjuyang@outlook.com</email>
      <url>https://github.com/digimono</url>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/digimono/maven-archetypes.git</connection>
    <developerConnection>scm:git:https://github.com/digimono/maven-archetypes.git</developerConnection>
    <url>https://github.com/digimono/maven-archetypes</url>
    <tag>HEAD</tag>
  </scm>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>${maven-release-plugin.version}</version>
            <configuration>
              <tagNameFormat>v@{project.version}</tagNameFormat>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <useReleaseProfile>false</useReleaseProfile>
              <releaseProfiles>release</releaseProfiles>
              <goals>deploy</goals>
              <arguments>-DskipTests</arguments>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <configuration>
              <generatePom>true</generatePom>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus-staging-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>flatten-maven-plugin</artifactId>
            <version>${flatten-maven-plugin.version}</version>
            <configuration>
              <updatePomFile>true</updatePomFile>
              <flattenMode>bom</flattenMode>
              <pomElements>
                <distributionManagement>flatten</distributionManagement>
                <dependencyManagement>keep</dependencyManagement>
                <properties>keep</properties>
                <build>keep</build>
                <dependencies>keep</dependencies>
                <profiles>remove</profiles>
                <reporting>remove</reporting>
              </pomElements>
            </configuration>
            <executions>
              <execution>
                <!-- Flatten and simplify our own POM for install/deploy -->
                <id>flatten</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>flatten</goal>
                </goals>
              </execution>
              <execution>
                <id>flatten-clean</id>
                <phase>clean</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
    <outputDirectory>${site.output.dir}</outputDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven-site-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <inherited>false</inherited>
            <reports>
              <report>aggregate</report>
              <report>test-aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <name>OSS Snapshots Repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <name>OSS Releases Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>
</project>
